name: Update Internal Snapshots

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-internal-snapshots:
    if: github.event_name == 'issue_comment' && contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/update')
    runs-on: ubuntu-latest
    steps:
      - name: "Get branch name and sha"
        id: get_branch
        run: |
          PR=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" ${{ github.event.issue.pull_request.url }})
          echo "branch=$(echo $PR | jq -r '.head.ref')" >> $GITHUB_OUTPUT
          echo "sha=$(echo $PR | jq -r '.head.sha')" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_branch.outputs.branch }}
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });
            return {
              headRef: pr.data.head.ref,
              fromFork: pr.data.head.repo.fork
            };
      - uses: ./.github/actions/setup-node
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            });
      - run: cd .internal/tests && make skip-tests-update
        env:
          IS_LOCAL: false
          IS_MAIN_BRANCH: false
      - name: Check for changes
        id: git-check
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Update test snapshots"
          # Use GITHUB_TOKEN for authentication
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          # Handle differently based on whether PR is from a fork
          if [[ "${{ fromJSON(steps.pr.outputs.result).fromFork }}" == true ]]; then
            echo "PR is from a fork. Creating a new branch in the main repository."
            # For forks, create a new branch in the main repo
            BRANCH_NAME="update-tests-pr-${{ github.event.issue.number }}"
            git checkout -b $BRANCH_NAME
            git push origin $BRANCH_NAME

            # Add a comment to the PR about the new branch
            echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          else
            # For PRs from the same repo, push directly to the PR branch
            git push origin HEAD:${{ fromJSON(steps.pr.outputs.result).headRef }}
          fi
      - name: Add comment to PR (fork)
        if: steps.git-check.outputs.changes == 'true' && fromJSON(steps.pr.outputs.result).fromFork == true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ Test snapshots have been updated and committed to a new branch: `${{ env.BRANCH_NAME }}`. Since this PR is from a fork, we cannot push directly to your branch. Please pull these changes into your PR branch.'
            })
      - name: Add comment if no changes
        if: steps.git-check.outputs.changes == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üìù No changes were detected in test snapshots.'
            })
